import requests
from bs4 import BeautifulSoup
import os
from flask import Flask

BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
CHAT_ID = os.getenv("TELEGRAM_CHAT_ID")

SEARCH_TARGETS = [
    ("iphone 12", 50000, 90000),
    ("–∞–π—Ñ–æ–Ω 12", 50000, 90000),
    ("–∞–π—Ñ–æ–Ω 13", 50000, 130000),
    ("–∞–π—Ñ–æ–Ω 12 –ø—Ä–æ", 50000, 100000),
    ("–∞–π—Ñ–æ–Ω 12 –ø—Ä–æ –º–∞–∫—Å", 50000, 110000),
    ("–∞–π—Ñ–æ–Ω 13 –ø—Ä–æ –º–∞–∫—Å", 50000, 170000),
    ("iphone 12 pro max", 50000, 110000),
    ("iphone 13 pro max", 50000, 170000),
    ("–∞–π—Ñ–æ–Ω 13 –ø—Ä–æ", 50000, 150000),
    ("iphone 12 pro", 50000, 100000),
    ("iphone 13", 50000, 130000),
    ("iphone 13 pro", 50000, 150000),
    ("iphone 14", 50000, 170000),
]

BLACKLIST_KEYWORDS = [
    "–∫–æ–ø–∏—è", "—Ä–µ–ø–ª–∏–∫–∞"
]

HEADERS = {"User-Agent": "Mozilla/5.0"}
SENT_FILE = "sent.txt"


def load_sent_links():
    if os.path.exists(SENT_FILE):
        with open(SENT_FILE, "r") as f:
            return set(f.read().splitlines())
    return set()


def save_sent_link(link):
    with open(SENT_FILE, "a") as f:
        f.write(link + "\n")


def send_photo(photo_url, caption):
    url = f"https://api.telegram.org/bot{BOT_TOKEN}/sendPhoto"
    data = {
        "chat_id": CHAT_ID,
        "photo": photo_url,
        "caption": caption,
        "parse_mode": "HTML"
    }
    requests.post(url, data=data)


def send_telegram(message):
    url = f"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage"
    requests.post(url,
                  data={
                      "chat_id": CHAT_ID,
                      "text": message,
                      "parse_mode": "HTML"
                  })


def check_ads():
    sent_links = load_sent_links()

    for keyword, min_price, max_price in SEARCH_TARGETS:
        url = f"https://www.olx.kz/list/q-{keyword.replace(' ', '%20')}/?search%5Border%5D=created_at%3Adesc&region=astana"
        response = requests.get(url, headers=HEADERS)
        soup = BeautifulSoup(response.text, "html.parser")
        ads = soup.find_all("div", class_="css-1sw7q4x")

        for ad in ads:
            title_tag = ad.find("h6")
            price_tag = ad.find("p", class_="css-10b0gli")
            link_tag = ad.find("a", href=True)
            img_tag = ad.find("img")

            if not (title_tag and price_tag and link_tag):
                continue

            title = title_tag.text.strip().lower()
            price_text = price_tag.text.strip().replace(" ", "").replace(
                "‚Ç∏", "").replace("\xa0", "")
            link = "https://www.olx.kz" + link_tag["href"]
            img_url = img_tag[
                "src"] if img_tag and "src" in img_tag.attrs else None

            try:
                price = int(price_text)
            except ValueError:
                continue

            if link in sent_links:
                continue

            if any(bad in title for bad in BLACKLIST_KEYWORDS):
                continue

            if keyword in title and min_price <= price <= max_price:
                caption = (f"üì± <b>{title_tag.text.strip()}</b>\n"
                           f"üí∞ <b>{price} ‚Ç∏</b>\n"
                           f"üîç –ü–æ–∏—Å–∫: <i>{keyword}</i>\n"
                           f"üîó <a href='{link}'>–°–º–æ—Ç—Ä–µ—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ</a>")

                if img_url:
                    send_photo(img_url, caption)
                    print(f"üì∑ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å —Ñ–æ—Ç–æ: {title_tag.text.strip()}")
                else:
                    send_telegram(caption)
                    print(f"‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –±–µ–∑ —Ñ–æ—Ç–æ: {title_tag.text.strip()}")

                save_sent_link(link)


# ‚úÖ Flask-—Å–µ—Ä–≤–µ—Ä –¥–ª—è –≤—ã–∑–æ–≤–∞ —á–µ—Ä–µ–∑ cron-job
app = Flask(__name__)


@app.route("/")
def home():
    return "‚úÖ OLX –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!"


@app.route("/run")
def run_bot():
    check_ads()
    return "üîÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—ä—è–≤–ª–µ–Ω–∏–π –≤—ã–ø–æ–ª–Ω–µ–Ω–∞!"


if __name__ == "__main__":
    app.run(host="0.0.0.0", port=81)
